$ scasp -s0 --ec ../../axioms/bec_scasp.pl ./fix-holdsAt4.pl --tree -r


% QUERY:?- happens(turn_light_off,T).

	ANSWER:	1 (in 3.63 ms)

JUSTIFICATION_TREE:
happens(turn_light_off,10.0) :-
    epsilon(0.0),
    holdsAt(light_on,10.0,0.0,turn_light_on) :-
        max_time(100),
        can_initiates(turn_light_on,light_on,10),
        happens(turn_light_on,10),
        initiates(turn_light_on,light_on,10),
        not_stoppedIn(10,light_on,10.0) :-
            not_interrupted(terminates,light_on,10,10.0) :-
                findall(Var2,findall_can_interrupts(terminates,Var2,light_on,10,10.0),[turn_light_off]) :-
                    findall_can_interrupts(terminates,turn_light_off,light_on,10,10.0) :-
                        can_interrupts(terminates,turn_light_off,light_on,Var1 | {Var1 #> 10,Var1 #< 10.0}) :-
                            can_terminates(turn_light_off,light_on,Var1 | {Var1 #> 10,Var1 #< 10.0}).
                not_interrupted_(terminates,light_on,[turn_light_off],10,10.0) :-
                    findall(Var3,interrupted(terminates,turn_light_off,light_on,Var3,10,10.0),[]),
                    all_entirely_outside_of_interval([],10,10.0),
                    not_interrupted_(terminates,light_on,[],10,10.0).
            not_interrupted(releases,light_on,10,10.0) :-
                findall(Var4,findall_can_interrupts(releases,Var4,light_on,10,10.0),[]),
                not_interrupted_(releases,light_on,[],10,10.0).
global_constraint.

MODEL:
{ happens(turn_light_off,10.0),  happens(turn_light_on,10),  initiates(turn_light_on,light_on,10),  not_stoppedIn(10,light_on,10.0) }
BINDINGS: 
T = 10.0


  real      0:00.69
  real [s]  0.69
  user [s]  0.45
  sys  [s]  0.06
  mem  [KB] 29460
  avgm [KB] 0
